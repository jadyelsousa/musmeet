{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\55619\\\\Documents\\\\Projeto\\\\musmeet\\\\frontend\\\\src\\\\pages\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Register.css';\nimport api from '../services/api';\nimport logo from \"../assets/logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register({\n  match,\n  history\n}) {\n  _s();\n\n  const [name, setName] = useState(match.params.name);\n  const [email, setEmail] = useState(match.params.email);\n  const [phone, setPhone] = useState('');\n  const [bio, setBio] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [categoryId, setCategoryId] = useState([]);\n  const [image, setImage] = useState(null);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData();\n    data.append('image', image);\n    data.append('name', name);\n    data.append('email', email);\n    data.append('phone', phone);\n    data.append('bio', bio);\n    data.append('category', categoryId);\n    const response = await api.post('/register', data);\n    const id = response.data._id;\n\n    if (id) {\n      history.push(`/main/${id}`);\n    }\n\n    console.log(response);\n  }\n\n  useEffect(() => {\n    async function loadCategories() {\n      const response = await api.get('/category');\n      setCategories(response.data);\n    }\n\n    loadCategories();\n  }, []);\n\n  function handleCategories(e) {\n    const checked = e.target.checked;\n    let categoriesArray = [];\n\n    if (checked) {\n      categoriesArray = [...categoryId];\n      categoriesArray.push(e.target.value);\n      setCategoryId(categoriesArray);\n    } else {\n      categoriesArray = [...categoryId];\n      let index = categoriesArray.indexOf(e.target.value);\n      categoriesArray.splice(index, 1);\n      setCategoryId(categoriesArray);\n    }\n  }\n\n  useEffect(() => {\n    function loadCategory() {\n      console.log(categoryId);\n    }\n\n    loadCategory();\n  }, [categoryId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-logo\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-register\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"imagem\",\n          onChange: e => setImage(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setName(e.target.value),\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          onChange: e => setEmail(e.target.value),\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"phone\",\n          onChange: e => setPhone(e.target.value),\n          value: phone,\n          placeholder: \"Telefone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"bio\",\n          onChange: e => setBio(e.target.value),\n          value: bio,\n          placeholder: \"Bio\",\n          cols: \"30\",\n          rows: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), categories.length > 0 ? /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Categorias  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 46\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [category.name, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: category.name,\n              onChange: handleCategories,\n              value: category._id,\n              id: \"category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, category._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this) : '', /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"HJc3wsh4r/m3CcRPQxujBJBegt0=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/55619/Documents/Projeto/musmeet/frontend/src/pages/Register.js"],"names":["React","useState","useEffect","api","Register","match","history","name","setName","params","email","setEmail","phone","setPhone","bio","setBio","categories","setCategories","categoryId","setCategoryId","image","setImage","handleSubmit","e","preventDefault","data","FormData","append","response","post","id","_id","push","console","log","loadCategories","get","handleCategories","checked","target","categoriesArray","value","index","indexOf","splice","loadCategory","logo","files","length","map","category"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport './Register.css';\r\nimport api from '../services/api';\r\nimport logo from '../assets/logo.svg';\r\n\r\n\r\n\r\nexport default function Register({ match, history }){\r\n    const [name, setName] = useState(match.params.name);\r\n    const [email, setEmail] = useState(match.params.email);\r\n    const [phone, setPhone] = useState('');\r\n    const [bio, setBio] = useState('');\r\n    const [categories, setCategories] = useState([]);\r\n    const [categoryId, setCategoryId] = useState([]);\r\n    const [image, setImage] = useState(null);\r\n\r\n    \r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const data = new FormData();\r\n        data.append('image',image);\r\n        data.append('name',name);\r\n        data.append('email',email);\r\n        data.append('phone',phone);\r\n        data.append('bio',bio);\r\n        data.append('category', categoryId);\r\n\r\n        const response = await api.post('/register', data);\r\n\r\n        const id = response.data._id;\r\n    \r\n            if(id){\r\n            history.push(`/main/${id}`);\r\n        }   \r\n        \r\n        console.log(response);\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function loadCategories(){\r\n            const response = await api.get('/category');\r\n            setCategories(response.data);\r\n          \r\n        }\r\n        loadCategories();\r\n    }, []);\r\n    \r\n\r\n    function handleCategories( e ){\r\n        const checked = e.target.checked;\r\n        let categoriesArray = [];\r\n\r\n        if(checked){\r\n            categoriesArray = [...categoryId];\r\n            categoriesArray.push(e.target.value)\r\n            setCategoryId(categoriesArray)\r\n        }else{\r\n            categoriesArray = [...categoryId];\r\n            let index = categoriesArray.indexOf(e.target.value)\r\n            categoriesArray.splice(index, 1)\r\n            setCategoryId(categoriesArray)\r\n        }\r\n    }\r\n\r\n   useEffect(() => {\r\n        function loadCategory(){\r\n            console.log(categoryId);\r\n          \r\n        }\r\n        loadCategory();\r\n    }, [categoryId]);\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <div className=\"image-logo\">    \r\n            <img src={logo} alt=\"logo\" />\r\n            <form className=\"form-register\" onSubmit={handleSubmit}>\r\n                <input type=\"file\" name=\"imagem\" onChange={e => setImage(e.target.files[0])} />\r\n                <input type=\"text\" onChange={e => setName(e.target.value)} value={name} />\r\n                <input type=\"email\" onChange={e => setEmail(e.target.value)} value={email} />\r\n                <input type=\"tel\" name=\"phone\" onChange={e => setPhone(e.target.value)} value={phone} placeholder=\"Telefone\" />\r\n                <textarea name=\"bio\" onChange={e => setBio(e.target.value)}  value={bio} placeholder=\"Bio\" cols=\"30\" rows=\"10\" />\r\n                { categories.length > 0 ? (\r\n                    <label> Categorias  <br/><br/>\r\n                     { categories.map(category => (\r\n                        <label key={category._id} >{category.name} \r\n                            <input type=\"checkbox\" name={category.name} onChange={handleCategories} value={category._id}  id=\"category\" /> \r\n                        </label> \r\n                    ))}\r\n                    </label>\r\n                   ) : '' }\r\n                \r\n                <button type=\"submit\" >Cadastrar</button>\r\n            </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}